include raylib as rl


$TITLE  = 'Seal Text Editor'
$FPS    = 60
$BG_COLOR = color(13, 17, 23, 255)

$width  = 800
$height = 600
$font_size = 64
$is_file_loaded = false
$file

var chars = ['h', 'e', 'l', 'l', 'o']

set_config_flags(flags.FLAG_WINDOW_RESIZABLE)
set_config_flags(flags.FLAG_MSAA_4X_HINT)
init_window(width, height, TITLE)
set_fps(FPS)
//set_exit_key(keys.KEY_NULL)
const font = load_font('JetBrainsMonoNerdFontMono-Regular.ttf', 256)

while not window_should_close()
  width  = get_screen_width()
  height = get_screen_height()

  if !is_file_loaded
    if is_key_pressed(keys.KEY_BACKSPACE) or is_key_pressed_repeat(keys.KEY_BACKSPACE)
      if len(chars) > 0 then pop(chars)
    else if is_key_pressed(keys.KEY_ENTER)
      var path = ''
      for c in chars do path += c
      if (file = fopen(path, 'r')) == null
        writeln('invalid file')
      else
        chars = []
        for c in fread(file)
          push(chars, c)
        fclose(file)
        is_file_loaded = true
    else
      var key = get_char_pressed()
      if key != 0
        var char = ascii(key)
        if char != ''
          push(chars, char)
  else
    if is_key_pressed(keys.KEY_BACKSPACE) or is_key_pressed_repeat(keys.KEY_BACKSPACE)
      if len(chars) > 0 then pop(chars)
    else if is_key_pressed(keys.KEY_ENTER)
      push(chars, '\n')
    else if is_key_pressed(keys.KEY_TAB)
      push(chars, '\t')
    else if (is_key_down(keys.KEY_LEFT_CONTROL) or
             is_key_down(keys.KEY_RIGHT_CONTROL))
      if is_key_pressed(keys.KEY_EQUAL) or is_key_pressed_repeat(keys.KEY_EQUAL)
        font_size = font_size + 2
      else if is_key_pressed(keys.KEY_MINUS) or is_key_pressed_repeat(keys.KEY_MINUS)
        font_size = font_size - 2
    else
      var key = get_char_pressed()
      if key != 0
        var char = ascii(key)
        if char != ''
          push(chars, char)

  begin_drawing()
  clear_background(BG_COLOR)

  var
    pos = vec2(font_size, font_size / 2)
    line = 1

  // FPS
  draw_text_ex(font, format('%', get_fps()), vec2(20, 20), 32, 0, color(255, 0, 0, 255))
  // draw first line
  draw_text_ex(font, format('%', line), vec2(font_size / 4, pos.y), font_size, 0, color(255, 255, 255, 50))
  for c in chars
    draw_rectangle(pos.x, pos.y, font_size / 2, font_size, colors.ORANGE)
    draw_text_ex(font, c, pos, font_size, 0, colors.WHITE)
    if c == '\n'
      pos.x = font_size
      pos.y += font_size
      line += 1
      draw_text_ex(font, format('%', line), vec2(font_size / 4, pos.y), font_size, 0, color(255, 255, 255, 50))
    else if c == '\t'
      if (pos.x += font_size / 2 * 4) >= width
        pos.x = font_size
        pos.y += font_size
    else if (pos.x += font_size / 2) + font_size / 2 >= width
      pos.x = font_size
      pos.y += font_size
  end_drawing()

close_window()
