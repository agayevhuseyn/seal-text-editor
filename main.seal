include './raylib.seal'
include './header.seal'

const
  TITLE  = 'Seal Text Editor'
  FPS    = 60
  BG_COLOR = color(13, 17, 23, 255)
var
  width  = 800
  height = 600
  font_size = 32
  cursor = 0

var chars = ['h', 'e', 'l', 'l', 'o']

set_config_flags(flags.FLAG_WINDOW_RESIZABLE)
set_config_flags(flags.FLAG_MSAA_4X_HINT)
init_window(width, height, TITLE)
set_fps(FPS)
//set_exit_key(keys.KEY_NULL)
const font = load_font('JetBrainsMonoNerdFontMono-Regular.ttf', 256)

while not window_should_close()
  width  = get_screen_width()
  height = get_screen_height()
  begin_drawing()
  clear_background(BG_COLOR)
  if is_key_pressed(keys.KEY_BACKSPACE) or is_key_pressed_repeat(keys.KEY_BACKSPACE)
    if len(chars) > 0 then pop(chars)
  else if is_key_pressed(keys.KEY_ENTER)
    push(chars, '\n')
  else if is_key_pressed(keys.KEY_TAB)
    push(chars, '\t')
  else if (is_key_down(keys.KEY_LEFT_CONTROL) or
           is_key_down(keys.KEY_RIGHT_CONTROL))
    if is_key_pressed(keys.KEY_EQUAL) or is_key_pressed_repeat(keys.KEY_EQUAL)
      font_size = font_size + 2
    else if is_key_pressed(keys.KEY_MINUS) or is_key_pressed_repeat(keys.KEY_MINUS)
      font_size = font_size - 2
  else
    var key = get_char_pressed()
    if key != 0
      writeln(key)
      push(chars, ascii(key))
  var pos = vec2(font_size / 2, font_size / 2)
  for c in chars
    if c == '\n'
      pos.y = pos.y + font_size
      pos.x = font_size / 2 
      skip
    else if c == '\t'
      pos.x = pos.x + 4 * font_size / 2
    else
        pos.x = pos.x + font_size / 2
    draw_rectangle(pos.x, pos.y, font_size / 2, font_size, colors.ORANGE)
    draw_text_ex(font, c, pos, font_size, 0, color(255, 255, 255, 255))
    if pos.x + font_size > width
      pos.x = font_size / 2
      pos.y = pos.y + font_size
  // cursor
  draw_rectangle(pos.x + font_size / 2, pos.y, font_size / 2, font_size, color(255, 255, 255, 255))
  end_drawing()

close_window()
